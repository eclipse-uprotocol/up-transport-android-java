/*
 * Copyright (c) 2024 General Motors GTO LLC.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * SPDX-FileType: DOCUMENTATION
 * SPDX-FileCopyrightText: 2023 General Motors GTO LLC
 * SPDX-License-Identifier: Apache-2.0
 */
apply plugin: 'jacoco'
jacoco {
    toolVersion = '0.8.8'
}

tasks.register('jacocoTestReport', JacocoReport) {
    dependsOn 'testDebugUnitTest'
    group = 'Reporting'
    description = 'Generate Jacoco coverage reports.'
    reports {
        xml.getRequired().set(true)
        html.getRequired().set(true)
    }
    def buildDir = layout.buildDirectory.get()
    def excludeClasses = [
            '**/BuildConfig.class',
            '**/IU*',
    ]
    def javaClasses = fileTree(dir: "${buildDir}/intermediates/javac/debug/compileDebugJavaWithJavac/classes/", excludes: excludeClasses)
    def kotlinClasses = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug/", excludes: excludeClasses)
    getClassDirectories().setFrom(files([javaClasses, kotlinClasses]))
    getSourceDirectories().setFrom(files([
            "${projectDir}/src/main/java",
            "${buildDir}/generated/source/kapt/debug/",
    ]))
    getExecutionData().setFrom(files("${buildDir}/jacoco/testDebugUnitTest.exec"))

    doLast {
        println "Unit-test coverage report generated at folder: ${buildDir}/reports/jacoco/jacocoTestReport/"
    }
}
